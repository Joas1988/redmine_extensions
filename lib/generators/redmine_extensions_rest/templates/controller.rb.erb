class <%= controller_class %>Controller < ApplicationController

  menu_item :<%= plugin_name_underscored %>

  before_filter :find_<%= model_name_underscored %>, :only => [:show, :edit, :update, :destroy]
  before_filter :find_optional_project

  helper :<%= model_name_pluralize_underscored %>
  helper :custom_fields
  helper :attachments
  helper :sort
  include SortHelper

  accept_api_auth :index, :show, :create, :update, :destroy

  def index
    @<%= model_name_pluralize_underscored %> = <%= model_name %>.all

    respond_to do |format|
      format.html
    end
  end

  def show
    respond_to do |format|
      format.html
    end
  end

  def new
    @<%= model_name_underscored %> = <%= model_name %>.new
    @<%= model_name_underscored %>.safe_attributes = params[:<%= model_name_underscored %>]

    respond_to do |format|
      format.html
    end
  end

  def create
    @<%= model_name_underscored %> = <%= model_name %>.new
    @<%= model_name_underscored %>.safe_attributes = params[:<%= model_name_underscored %>]

    if @<%= model_name_underscored %>.save
      respond_to do |format|
        format.html {
          flash[:notice] = l(:notice_successful_create)
          redirect_back_or_default <%= model_name_pluralize_underscored %>_path(@<%= model_name_underscored %>)
        }
      end
    else
      respond_to do |format|
        format.html { render :action => 'new' }
      end
    end
  end

  def edit
    @<%= model_name_underscored %>.safe_attributes = params[:<%= model_name_underscored %>]

    respond_to do |format|
      format.html
    end
  end

  def update
    @<%= model_name_underscored %>.safe_attributes = params[:<%= model_name_underscored %>]

    if @<%= model_name_underscored %>.save
      flash[:notice] = l(:notice_successful_update)

      respond_to do |format|
        format.html {
          redirect_back_or_default <%= model_name_pluralize_underscored %>_path(@<%= model_name_underscored %>)
        }
      end
    else
      respond_to do |format|
        format.html { render :action => 'edit' }
      end
    end
  end

  def destroy
    @<%= model_name_underscored %>.destroy
    flash[:notice] = l(:notice_successful_delete)

    respond_to do |format|
      format.html {redirect_back_or_default <%= model_name_pluralize_underscored %>_path}
    end
  end

  private

  def find_<%= model_name_underscored %>
    @<%= model_name_underscored %> = <%= model_name %>.find(params[:id])
  rescue ActiveRecord::RecordNotFound
    render_404
  end

end
